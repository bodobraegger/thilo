---
import { marked } from 'marked';

export interface Props {
  content: string;
  class?: string;
}

const { content, class: className = '' } = Astro.props;

// Configure marked options
marked.setOptions({
  gfm: true,
  breaks: true,
});

// Custom renderer for links and images
const renderer = new marked.Renderer();

renderer.link = function(token: any): string {
  const { href, title, text } = token;
  const isExternal = href && (href.startsWith('http') || href.startsWith('//'));
  const titleAttr = title ? ` title="${title}"` : '';
  
  if (isExternal) {
    return `<a href="${href}"${titleAttr} target="_blank" rel="noopener noreferrer">${text}</a>`;
  }
  
  return `<a href="${href}"${titleAttr}>${text}</a>`;
};

renderer.image = function(token: any): string {
  const { href, title, text } = token;
  let imgTag = `<img src="${href}" alt="${text || ''}"`;
  if (title) {
    // Check if title contains style information (from Strapi)
    if (title.includes('width:') || title.includes('height:') || title.includes('float:')) {
      imgTag += ` style="${title}"`;
    } else {
      imgTag += ` title="${title}"`;
    }
  }
  imgTag += ' />';
  return imgTag;
};

marked.use({ renderer });

const processedContent = marked(content || '');
---

<div class={`markdown-content ${className}`} set:html={processedContent} />

<style lang="scss">
  .markdown-content {
    line-height: 1.6;

    // Headings
    :global(h1), :global(h2), :global(h3), :global(h4), :global(h5), :global(h6) {
      margin: 1.5rem 0 1rem 0;
      font-weight: 600;
      line-height: 1.25;
    }

    :global(h1) {
      font-size: 2rem;
      color: var(--color-primary, #0066cc);
      border-bottom: 2px solid var(--color-primary, #0066cc);
      padding-bottom: 0.5rem;
    }

    :global(h2) {
      font-size: 1.5rem;
      color: var(--color-primary-dark, #004499);
    }

    :global(h3) {
      font-size: 1.25rem;
    }

    // Paragraphs
    :global(p) {
      margin: 1rem 0;
      line-height: 1.6;
    }

    // Links
    :global(a) {
      color: var(--color-primary, #0066cc);
      text-decoration: none;
      border-bottom: 1px solid transparent;
      transition: all 0.2s ease;

      &:hover {
        color: var(--color-primary-dark, #004499);
        border-bottom-color: currentColor;
      }

      &[target="_blank"]::after {
        content: " â†—";
        font-size: 0.8em;
        opacity: 0.7;
      }
    }

    // Lists
    :global(ul), :global(ol) {
      margin: 1rem 0;
      padding-left: 2rem;

      :global(li) {
        margin: 0.5rem 0;
        line-height: 1.5;
      }
    }

    // Images
    :global(img) {
      max-width: 100%;
      height: auto;
      border-radius: 4px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      margin: 1rem 0;

      // Handle float styles from markdown
      &[style*="float: right"] {
        float: right;
        margin: 0 0 1rem 1rem;
      }

      &[style*="float: left"] {
        float: left;
        margin: 0 1rem 1rem 0;
      }
    }

    // Blockquotes
    :global(blockquote) {
      margin: 1.5rem 0;
      padding: 1rem 1.5rem;
      border-left: 4px solid var(--color-primary, #0066cc);
      background-color: var(--color-bg-secondary, #f8f9fa);
      font-style: italic;

      :global(p) {
        margin: 0.5rem 0;
      }
    }

    // Code
    :global(code) {
      background-color: var(--color-bg-secondary, #f8f9fa);
      padding: 0.2rem 0.4rem;
      border-radius: 3px;
      font-family: 'Courier New', monospace;
      font-size: 0.9em;
    }

    :global(pre) {
      background-color: var(--color-bg-secondary, #f8f9fa);
      padding: 1rem;
      border-radius: 6px;
      overflow-x: auto;
      margin: 1rem 0;

      :global(code) {
        background: none;
        padding: 0;
      }
    }

    // Tables
    :global(table) {
      width: 100%;
      border-collapse: collapse;
      margin: 1rem 0;
      background-color: white;
      border-radius: 6px;
      overflow: hidden;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);

      :global(th), :global(td) {
        padding: 0.75rem 1rem;
        text-align: left;
        border-bottom: 1px solid var(--color-border-default, #dee2e6);
      }

      :global(th) {
        background-color: var(--color-bg-secondary, #f8f9fa);
        font-weight: 600;
        color: var(--color-text-primary, #212529);
      }

      :global(tr:hover) {
        background-color: var(--color-bg-secondary, #f8f9fa);
      }
    }

    // Horizontal rules
    :global(hr) {
      margin: 2rem 0;
      border: none;
      height: 1px;
      background-color: var(--color-border-default, #dee2e6);
    }

    // Strong and emphasis
    :global(strong) {
      font-weight: 600;
    }

    :global(em) {
      font-style: italic;
    }
  }
</style>
