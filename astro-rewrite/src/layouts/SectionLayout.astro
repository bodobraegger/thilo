---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import TableOfContents from '../components/TableOfContents.astro';
import { getSections } from '../utils/data';

export interface Props {
  title: string;
  lang?: string;
  currentSection?: any;
}

const { title, lang = 'de', currentSection } = Astro.props;

// Get all sections for the table of contents
let sections: any[] = [];
try {
  sections = await getSections(lang);
} catch (e) {
  console.error('Error loading sections for TOC:', e);
  sections = [];
}
---

<BaseLayout title={title} lang={lang}>
  <Header locale={lang as 'de' | 'fr' | 'it'} currentSection={currentSection} />
  

  
  <div class="flex min-h-screen">
    <!-- Table of Contents Sidebar -->
    <TableOfContents 
      sections={sections} 
      currentSection={currentSection}
      lang={lang}
    />
    
    <!-- Main Content -->
    <main class="flex-1 p-6 overflow-x-hidden">
      <slot />
    </main>
  </div>
  
  <Footer locale={lang as 'de' | 'fr' | 'it'} />
</BaseLayout>

<script>
  // Mobile TOC toggle functionality
  const mobileToggle = document.getElementById('toc-mobile-toggle');
  const tocSidebar = document.getElementById('toc-sidebar');
  const tocOverlay = document.getElementById('toc-overlay');
  
  function openTOC() {
    tocSidebar?.classList.add('open');
    tocOverlay?.classList.add('active');
    document.body.style.overflow = 'hidden';
  }
  
  function closeTOC() {
    tocSidebar?.classList.remove('open');
    tocOverlay?.classList.remove('active');
    document.body.style.overflow = '';
  }
  
  mobileToggle?.addEventListener('click', openTOC);
  tocOverlay?.addEventListener('click', closeTOC);
  
  // Close TOC on mobile when clicking a link
  document.querySelectorAll('.toc-link').forEach(link => {
    link.addEventListener('click', () => {
      if (window.innerWidth <= 1024) {
        closeTOC();
      }
    });
  });
  
  // Handle escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && tocSidebar?.classList.contains('open')) {
      closeTOC();
    }
  });
</script>
